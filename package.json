{
  "name": "moxie",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "clean-html": "if [ -f 'docs/index.html' ]; then rm docs/index.html; fi && if [ -f 'docs/404.html' ]; then rm docs/404.html; fi",
    "clean-assets": "if [ -d 'docs/assets' ]; then rm -r docs/assets; fi",
    "clean-css": "if [ -f 'docs/main.css' ]; then rm docs/main.css; fi && if [ -f 'docs/main.css.map' ]; then rm docs/main.css.map; fi",
    "clean-scripts": "if [ -f 'docs/main.js' ]; then rm docs/main.js; fi",
    "build-html": "npm run clean-html && if [ -f 'app/index.html' ]; then cp app/index.html docs/index.html && cp app/index.html docs/404.html; else echo you must have an index.html file; fi",
    "build-assets": "npm run clean-assets && if [ -d 'app/assets' ]; then cp -r app/assets docs; fi",
    "build-css": "npm run clean-css && if [ -f 'app/scss/main.scss' ]; then sass app/scss/main.scss:docs/main.css; else echo you must have a scss directory with a main.scss in your app to compile css; fi",
    "build-scripts": "npm run clean-scripts && if [ -f 'app/scripts/main.js' ]; then browserify app/scripts/main.js -d -v --outfile docs/main.js; else echo you must have a scripts directory with an main.js in your app to compile js; fi",
    "build": "json-scaffold && npm run build-html && npm run build-assets && npm run build-css && npm run build-scripts",
    "watch-html": "onchange 'app/*.html' -- npm run build-html",
    "watch-sass": "sass --watch app/scss:docs",
    "watch-scripts": "watchify app/scripts/main.js -d -v --poll --outfile docs/main.js",
    "watch-assets": "onchange 'app/assets/**/*.*' -- npm run build-assets",
    "watch": "parallelshell 'npm run watch-html' 'npm run watch-assets' 'npm run watch-sass' 'npm run watch-scripts' 'npm run dev-server-watch'",
    "dev-server-start": "http-server ./docs",
    "dev-server-watch": "npm run dev-server-start && onchange 'docs/**/*.*' -- npm run dev-server-start",
    "start": "npm run build && npm run watch",
    "preinstall": "if ! command -v http-server; then npm install -g http-server; fi && if ! command -v mocha; then npm install -g mocha; fi",
    "postinstall": "npm start",
    "test": "mocha -r mock-local-storage --require test/setup.js --globals window --compilers js:babel-core/register --recursive"
  },
  "browserify": {
    "transform": [
      "babelify"
    ]
  },
  "babel": {
    "sourceType": "module",
    "presets": [
      "es2015",
      "react"
    ]
  },
  "author": "BFProductions",
  "license": "ISC",
  "devDependencies": {
    "babel": "^6.23.0",
    "babel-core": "^6.24.1",
    "babel-loader": "^7.0.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "babel-register": "^6.23.0",
    "babelify": "^7.3.0",
    "browserify": "^14.1.0",
    "chai": "^3.5.0",
    "chai-enzyme": "^0.6.1",
    "enzyme": "^2.7.1",
    "eslint": "^3.16.1",
    "eslint-plugin-react": "^6.10.0",
    "ffmpeg": "0.0.4",
    "filepreview": "^1.0.12",
    "jsdom": "9.12.0",
    "jsdom-global": "2.1.1",
    "json-scaffold": "^0.1.1",
    "mocha": "^3.2.0",
    "mock-local-storage": "^1.0.2",
    "node-localstorage": "^1.3.0",
    "node-sass": "^4.5.0",
    "onchange": "^3.2.1",
    "parallelshell": "^2.0.0",
    "react-addons-test-utils": "^15.4.2",
    "react-test-renderer": "^15.5.4",
    "should": "^11.2.0",
    "sinon": "^2.0.0",
    "watchify": "^3.9.0",
    "webpack": "^2.5.1"
  },
  "dependencies": {
    "backbone": "^1.3.3",
    "jquery": "^3.1.1",
    "jsdom": "^9.8.3",
    "react": "^15.4.2",
    "react-dom": "^15.4.2",
    "react-dropzone": "^3.11.0",
    "react-dropzone-component": "^1.4.1",
    "react-file-download": "^0.3.2",
    "react-router": "^3.0.2",
    "underscore": "^1.8.3"
  }
}
